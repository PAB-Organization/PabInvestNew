//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Globus.get.creditinfosolutions {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://cb4.creditinfosolutions.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogBySeverityOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchUploadWaitOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterBatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXmlSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMonitorOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchUploadChunkBeginOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchUploadChunkOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchUploadChunkFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchUploadChunkWaitOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchResponseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchResponseChunkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Globus.Properties.Settings.Default.Globus_get_creditinfosolutions_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetLogBySeverityCompletedEventHandler GetLogBySeverityCompleted;
        
        /// <remarks/>
        public event BatchUploadCompletedEventHandler BatchUploadCompleted;
        
        /// <remarks/>
        public event BatchUploadWaitCompletedEventHandler BatchUploadWaitCompleted;
        
        /// <remarks/>
        public event FilterBatchUploadCompletedEventHandler FilterBatchUploadCompleted;
        
        /// <remarks/>
        public event BatchResponseCompletedEventHandler BatchResponseCompleted;
        
        /// <remarks/>
        public event AuthorizationCompletedEventHandler AuthorizationCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event GetXmlSchemaCompletedEventHandler GetXmlSchemaCompleted;
        
        /// <remarks/>
        public event GetLogByGuidCompletedEventHandler GetLogByGuidCompleted;
        
        /// <remarks/>
        public event GetMonitorCompletedEventHandler GetMonitorCompleted;
        
        /// <remarks/>
        public event BatchUploadChunkBeginCompletedEventHandler BatchUploadChunkBeginCompleted;
        
        /// <remarks/>
        public event BatchUploadChunkCompletedEventHandler BatchUploadChunkCompleted;
        
        /// <remarks/>
        public event BatchUploadChunkFinishCompletedEventHandler BatchUploadChunkFinishCompleted;
        
        /// <remarks/>
        public event BatchUploadChunkWaitCompletedEventHandler BatchUploadChunkWaitCompleted;
        
        /// <remarks/>
        public event BatchResponseStatusCompletedEventHandler BatchResponseStatusCompleted;
        
        /// <remarks/>
        public event BatchResponseChunkCompletedEventHandler BatchResponseChunkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/HelloWorld", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/GetLogBySeverity", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLogBySeverity(System.Xml.XmlNode data) {
            object[] results = this.Invoke("GetLogBySeverity", new object[] {
                        data});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogBySeverityAsync(System.Xml.XmlNode data) {
            this.GetLogBySeverityAsync(data, null);
        }
        
        /// <remarks/>
        public void GetLogBySeverityAsync(System.Xml.XmlNode data, object userState) {
            if ((this.GetLogBySeverityOperationCompleted == null)) {
                this.GetLogBySeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogBySeverityOperationCompleted);
            }
            this.InvokeAsync("GetLogBySeverity", new object[] {
                        data}, this.GetLogBySeverityOperationCompleted, userState);
        }
        
        private void OnGetLogBySeverityOperationCompleted(object arg) {
            if ((this.GetLogBySeverityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogBySeverityCompleted(this, new GetLogBySeverityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/BatchUpload", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BatchUpload(System.Xml.XmlNode data) {
            object[] results = this.Invoke("BatchUpload", new object[] {
                        data});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BatchUploadAsync(System.Xml.XmlNode data) {
            this.BatchUploadAsync(data, null);
        }
        
        /// <remarks/>
        public void BatchUploadAsync(System.Xml.XmlNode data, object userState) {
            if ((this.BatchUploadOperationCompleted == null)) {
                this.BatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUploadOperationCompleted);
            }
            this.InvokeAsync("BatchUpload", new object[] {
                        data}, this.BatchUploadOperationCompleted, userState);
        }
        
        private void OnBatchUploadOperationCompleted(object arg) {
            if ((this.BatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUploadCompleted(this, new BatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/BatchUploadWait", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BatchUploadWait(System.Xml.XmlNode data, int miliseconds) {
            object[] results = this.Invoke("BatchUploadWait", new object[] {
                        data,
                        miliseconds});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BatchUploadWaitAsync(System.Xml.XmlNode data, int miliseconds) {
            this.BatchUploadWaitAsync(data, miliseconds, null);
        }
        
        /// <remarks/>
        public void BatchUploadWaitAsync(System.Xml.XmlNode data, int miliseconds, object userState) {
            if ((this.BatchUploadWaitOperationCompleted == null)) {
                this.BatchUploadWaitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUploadWaitOperationCompleted);
            }
            this.InvokeAsync("BatchUploadWait", new object[] {
                        data,
                        miliseconds}, this.BatchUploadWaitOperationCompleted, userState);
        }
        
        private void OnBatchUploadWaitOperationCompleted(object arg) {
            if ((this.BatchUploadWaitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUploadWaitCompleted(this, new BatchUploadWaitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/FilterBatchUpload", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FilterBatchUpload(string filter, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            object[] results = this.Invoke("FilterBatchUpload", new object[] {
                        filter,
                        data});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FilterBatchUploadAsync(string filter, byte[] data) {
            this.FilterBatchUploadAsync(filter, data, null);
        }
        
        /// <remarks/>
        public void FilterBatchUploadAsync(string filter, byte[] data, object userState) {
            if ((this.FilterBatchUploadOperationCompleted == null)) {
                this.FilterBatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterBatchUploadOperationCompleted);
            }
            this.InvokeAsync("FilterBatchUpload", new object[] {
                        filter,
                        data}, this.FilterBatchUploadOperationCompleted, userState);
        }
        
        private void OnFilterBatchUploadOperationCompleted(object arg) {
            if ((this.FilterBatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterBatchUploadCompleted(this, new FilterBatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/BatchResponse", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BatchResponse(string batchId) {
            object[] results = this.Invoke("BatchResponse", new object[] {
                        batchId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BatchResponseAsync(string batchId) {
            this.BatchResponseAsync(batchId, null);
        }
        
        /// <remarks/>
        public void BatchResponseAsync(string batchId, object userState) {
            if ((this.BatchResponseOperationCompleted == null)) {
                this.BatchResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchResponseOperationCompleted);
            }
            this.InvokeAsync("BatchResponse", new object[] {
                        batchId}, this.BatchResponseOperationCompleted, userState);
        }
        
        private void OnBatchResponseOperationCompleted(object arg) {
            if ((this.BatchResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchResponseCompleted(this, new BatchResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/Authorization", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Authorization() {
            object[] results = this.Invoke("Authorization", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorizationAsync() {
            this.AuthorizationAsync(null);
        }
        
        /// <remarks/>
        public void AuthorizationAsync(object userState) {
            if ((this.AuthorizationOperationCompleted == null)) {
                this.AuthorizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorizationOperationCompleted);
            }
            this.InvokeAsync("Authorization", new object[0], this.AuthorizationOperationCompleted, userState);
        }
        
        private void OnAuthorizationOperationCompleted(object arg) {
            if ((this.AuthorizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorizationCompleted(this, new AuthorizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/GetVersion", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/GetXmlSchema", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetXmlSchema(XmlSchemaEnum schema) {
            object[] results = this.Invoke("GetXmlSchema", new object[] {
                        schema});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetXmlSchemaAsync(XmlSchemaEnum schema) {
            this.GetXmlSchemaAsync(schema, null);
        }
        
        /// <remarks/>
        public void GetXmlSchemaAsync(XmlSchemaEnum schema, object userState) {
            if ((this.GetXmlSchemaOperationCompleted == null)) {
                this.GetXmlSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXmlSchemaOperationCompleted);
            }
            this.InvokeAsync("GetXmlSchema", new object[] {
                        schema}, this.GetXmlSchemaOperationCompleted, userState);
        }
        
        private void OnGetXmlSchemaOperationCompleted(object arg) {
            if ((this.GetXmlSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXmlSchemaCompleted(this, new GetXmlSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/GetLogByGuid", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLogByGuid(System.Xml.XmlNode data) {
            object[] results = this.Invoke("GetLogByGuid", new object[] {
                        data});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogByGuidAsync(System.Xml.XmlNode data) {
            this.GetLogByGuidAsync(data, null);
        }
        
        /// <remarks/>
        public void GetLogByGuidAsync(System.Xml.XmlNode data, object userState) {
            if ((this.GetLogByGuidOperationCompleted == null)) {
                this.GetLogByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogByGuidOperationCompleted);
            }
            this.InvokeAsync("GetLogByGuid", new object[] {
                        data}, this.GetLogByGuidOperationCompleted, userState);
        }
        
        private void OnGetLogByGuidOperationCompleted(object arg) {
            if ((this.GetLogByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogByGuidCompleted(this, new GetLogByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/GetMonitor", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMonitor(string adminSubscriberUnit) {
            object[] results = this.Invoke("GetMonitor", new object[] {
                        adminSubscriberUnit});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMonitorAsync(string adminSubscriberUnit) {
            this.GetMonitorAsync(adminSubscriberUnit, null);
        }
        
        /// <remarks/>
        public void GetMonitorAsync(string adminSubscriberUnit, object userState) {
            if ((this.GetMonitorOperationCompleted == null)) {
                this.GetMonitorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMonitorOperationCompleted);
            }
            this.InvokeAsync("GetMonitor", new object[] {
                        adminSubscriberUnit}, this.GetMonitorOperationCompleted, userState);
        }
        
        private void OnGetMonitorOperationCompleted(object arg) {
            if ((this.GetMonitorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMonitorCompleted(this, new GetMonitorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/BatchUploadChunkBegin", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long BatchUploadChunkBegin() {
            object[] results = this.Invoke("BatchUploadChunkBegin", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void BatchUploadChunkBeginAsync() {
            this.BatchUploadChunkBeginAsync(null);
        }
        
        /// <remarks/>
        public void BatchUploadChunkBeginAsync(object userState) {
            if ((this.BatchUploadChunkBeginOperationCompleted == null)) {
                this.BatchUploadChunkBeginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUploadChunkBeginOperationCompleted);
            }
            this.InvokeAsync("BatchUploadChunkBegin", new object[0], this.BatchUploadChunkBeginOperationCompleted, userState);
        }
        
        private void OnBatchUploadChunkBeginOperationCompleted(object arg) {
            if ((this.BatchUploadChunkBeginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUploadChunkBeginCompleted(this, new BatchUploadChunkBeginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/BatchUploadChunk", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BatchUploadChunk(long id, int partNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            this.Invoke("BatchUploadChunk", new object[] {
                        id,
                        partNumber,
                        data});
        }
        
        /// <remarks/>
        public void BatchUploadChunkAsync(long id, int partNumber, byte[] data) {
            this.BatchUploadChunkAsync(id, partNumber, data, null);
        }
        
        /// <remarks/>
        public void BatchUploadChunkAsync(long id, int partNumber, byte[] data, object userState) {
            if ((this.BatchUploadChunkOperationCompleted == null)) {
                this.BatchUploadChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUploadChunkOperationCompleted);
            }
            this.InvokeAsync("BatchUploadChunk", new object[] {
                        id,
                        partNumber,
                        data}, this.BatchUploadChunkOperationCompleted, userState);
        }
        
        private void OnBatchUploadChunkOperationCompleted(object arg) {
            if ((this.BatchUploadChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUploadChunkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/BatchUploadChunkFinish", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BatchUploadChunkFinish([System.ComponentModel.DefaultValueAttribute(BatchPriorityClassEnum.Other)] BatchPriorityClassEnum priority, long id) {
            object[] results = this.Invoke("BatchUploadChunkFinish", new object[] {
                        priority,
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BatchUploadChunkFinishAsync(BatchPriorityClassEnum priority, long id) {
            this.BatchUploadChunkFinishAsync(priority, id, null);
        }
        
        /// <remarks/>
        public void BatchUploadChunkFinishAsync(BatchPriorityClassEnum priority, long id, object userState) {
            if ((this.BatchUploadChunkFinishOperationCompleted == null)) {
                this.BatchUploadChunkFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUploadChunkFinishOperationCompleted);
            }
            this.InvokeAsync("BatchUploadChunkFinish", new object[] {
                        priority,
                        id}, this.BatchUploadChunkFinishOperationCompleted, userState);
        }
        
        private void OnBatchUploadChunkFinishOperationCompleted(object arg) {
            if ((this.BatchUploadChunkFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUploadChunkFinishCompleted(this, new BatchUploadChunkFinishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/BatchUploadChunkWait", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] BatchUploadChunkWait([System.ComponentModel.DefaultValueAttribute(BatchPriorityClassEnum.Other)] BatchPriorityClassEnum priority, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, int miliseconds) {
            object[] results = this.Invoke("BatchUploadChunkWait", new object[] {
                        priority,
                        data,
                        miliseconds});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void BatchUploadChunkWaitAsync(BatchPriorityClassEnum priority, byte[] data, int miliseconds) {
            this.BatchUploadChunkWaitAsync(priority, data, miliseconds, null);
        }
        
        /// <remarks/>
        public void BatchUploadChunkWaitAsync(BatchPriorityClassEnum priority, byte[] data, int miliseconds, object userState) {
            if ((this.BatchUploadChunkWaitOperationCompleted == null)) {
                this.BatchUploadChunkWaitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchUploadChunkWaitOperationCompleted);
            }
            this.InvokeAsync("BatchUploadChunkWait", new object[] {
                        priority,
                        data,
                        miliseconds}, this.BatchUploadChunkWaitOperationCompleted, userState);
        }
        
        private void OnBatchUploadChunkWaitOperationCompleted(object arg) {
            if ((this.BatchUploadChunkWaitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchUploadChunkWaitCompleted(this, new BatchUploadChunkWaitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/BatchResponseStatus", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BatchResponseStatus(long id) {
            object[] results = this.Invoke("BatchResponseStatus", new object[] {
                        id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BatchResponseStatusAsync(long id) {
            this.BatchResponseStatusAsync(id, null);
        }
        
        /// <remarks/>
        public void BatchResponseStatusAsync(long id, object userState) {
            if ((this.BatchResponseStatusOperationCompleted == null)) {
                this.BatchResponseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchResponseStatusOperationCompleted);
            }
            this.InvokeAsync("BatchResponseStatus", new object[] {
                        id}, this.BatchResponseStatusOperationCompleted, userState);
        }
        
        private void OnBatchResponseStatusOperationCompleted(object arg) {
            if ((this.BatchResponseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchResponseStatusCompleted(this, new BatchResponseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cb4.creditinfosolutions.com/BatchResponseChunk", RequestNamespace="http://cb4.creditinfosolutions.com/", ResponseNamespace="http://cb4.creditinfosolutions.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] BatchResponseChunk(long id, int partNumber) {
            object[] results = this.Invoke("BatchResponseChunk", new object[] {
                        id,
                        partNumber});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void BatchResponseChunkAsync(long id, int partNumber) {
            this.BatchResponseChunkAsync(id, partNumber, null);
        }
        
        /// <remarks/>
        public void BatchResponseChunkAsync(long id, int partNumber, object userState) {
            if ((this.BatchResponseChunkOperationCompleted == null)) {
                this.BatchResponseChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchResponseChunkOperationCompleted);
            }
            this.InvokeAsync("BatchResponseChunk", new object[] {
                        id,
                        partNumber}, this.BatchResponseChunkOperationCompleted, userState);
        }
        
        private void OnBatchResponseChunkOperationCompleted(object arg) {
            if ((this.BatchResponseChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchResponseChunkCompleted(this, new BatchResponseChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cb4.creditinfosolutions.com/")]
    public enum XmlSchemaEnum {
        
        /// <remarks/>
        BasicBatchSchema,
        
        /// <remarks/>
        FullBatchSchema,
        
        /// <remarks/>
        BatchResponseSchema,
        
        /// <remarks/>
        BatchResponseStatusSchema,
        
        /// <remarks/>
        AuthorizationSchema,
        
        /// <remarks/>
        MonitorSchema,
        
        /// <remarks/>
        LogSchema,
        
        /// <remarks/>
        VersionSchema,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cb4.creditinfosolutions.com/")]
    public enum BatchPriorityClassEnum {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Interactive,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        BatchProcessing,
        
        /// <remarks/>
        ExternalProcessing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLogBySeverityCompletedEventHandler(object sender, GetLogBySeverityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogBySeverityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogBySeverityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BatchUploadCompletedEventHandler(object sender, BatchUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BatchUploadWaitCompletedEventHandler(object sender, BatchUploadWaitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchUploadWaitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchUploadWaitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FilterBatchUploadCompletedEventHandler(object sender, FilterBatchUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterBatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterBatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BatchResponseCompletedEventHandler(object sender, BatchResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AuthorizationCompletedEventHandler(object sender, AuthorizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetXmlSchemaCompletedEventHandler(object sender, GetXmlSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXmlSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXmlSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLogByGuidCompletedEventHandler(object sender, GetLogByGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMonitorCompletedEventHandler(object sender, GetMonitorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMonitorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMonitorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BatchUploadChunkBeginCompletedEventHandler(object sender, BatchUploadChunkBeginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchUploadChunkBeginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchUploadChunkBeginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BatchUploadChunkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BatchUploadChunkFinishCompletedEventHandler(object sender, BatchUploadChunkFinishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchUploadChunkFinishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchUploadChunkFinishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BatchUploadChunkWaitCompletedEventHandler(object sender, BatchUploadChunkWaitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchUploadChunkWaitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchUploadChunkWaitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BatchResponseStatusCompletedEventHandler(object sender, BatchResponseStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchResponseStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchResponseStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BatchResponseChunkCompletedEventHandler(object sender, BatchResponseChunkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchResponseChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchResponseChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591